{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2de5efd7",
   "metadata": {},
   "source": [
    "# Lecture 10 Class practice"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "448fd6a1",
   "metadata": {},
   "source": [
    "### Example 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f92d27b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jacky can eat\n",
      "Jacky can sit\n",
      "Bruno can sit\n"
     ]
    }
   ],
   "source": [
    "class Dog:\n",
    "    def __init__(self, name, age):\n",
    "        self.name=name\n",
    "        self.age=age\n",
    "        \n",
    "    def canEat(self):\n",
    "        print(f\"{self.name} can eat\")\n",
    "        \n",
    "    def canSit(self):\n",
    "        print(f\"{self.name} can sit\")\n",
    "        \n",
    "dog1=Dog(\"Jacky\",1)\n",
    "dog1.canEat()\n",
    "dog1.canSit()\n",
    "\n",
    "dog2=Dog(\"Bruno\",2)\n",
    "dog2.canSit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a96f391",
   "metadata": {},
   "source": [
    "### Example 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "69888ede",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the mark of subject 5\n",
      "Enter the mark of subject 5\n",
      "Enter the mark of subject 5\n",
      "Enter the mark of subject 5\n",
      "Enter the mark of subject 5\n",
      "Failed\n",
      "Name of student is Bob age is 18 Address is32 Al Khansa Khaitan Kuwait 40004 student id is 123\n",
      "Address is32 Al Khansa Khaitan Kuwait 40004\n",
      "Address is32 Al Khansa Khaitan Kuwait 40004\n",
      "Address is32 Al Khansa Khaitan Kuwait 40004\n",
      "Address is32 Al Khansa Khaitan Kuwait 40004\n",
      "<__main__.Address object at 0x0000025D6286FE20>\n"
     ]
    }
   ],
   "source": [
    "class StudentGrade:\n",
    "    def __init__(self, name , age,  address, studentId):\n",
    "        self.name= name\n",
    "        self.age= age\n",
    "        self.address= address\n",
    "        self.studentId= studentId\n",
    "        \n",
    "    def grades(self,marks):\n",
    "        self.marks=marks\n",
    "        if 90<=self.marks<=100:\n",
    "            print(\"A\")\n",
    "        elif 80<=self.marks<90:\n",
    "            print(\"B\")  \n",
    "        elif 70<=self.marks<80:\n",
    "            print(\"C\")\n",
    "        elif 60<=self.marks<70:\n",
    "            print(\"D\")\n",
    "        elif 50<=self.marks<60:\n",
    "            print(\"E\")\n",
    "        else:\n",
    "            print(\"Failed\")\n",
    "            \n",
    "    def printInfo(self):\n",
    "        print(\"Name of student is\",self.name,\"age is\",self.age,self.address,\"student id is\",self.studentId)\n",
    "\n",
    "class Address:\n",
    "    def __init__(self,streetnumber, streetName, city, state, zipcode):\n",
    "        self.streetnumber=streetnumber\n",
    "        self.streetName=streetName\n",
    "        self.city=city\n",
    "        self.state=state\n",
    "        self.zipcode=zipcode\n",
    "        \n",
    "    def printinformation(self):\n",
    "        print(f\"Address is{self.streetnumber} {self.streetName} {self.city} {self.state} {self.zipcode}\")\n",
    "    \n",
    "    def __str__(self):\n",
    "        return f\"Address is{self.streetnumber} {self.streetName} {self.city} {self.state} {self.zipcode}\"\n",
    "        \n",
    "address1=Address(32, \"Al Khansa\", \"Khaitan\", \"Kuwait\",40004)\n",
    "student1= StudentGrade(\"Bob\", 18, address1, 123)\n",
    "\n",
    "mark=0\n",
    "\n",
    "for i in range(5):\n",
    "    subject=int(input(\"Enter the mark of subject \"))\n",
    "    mark=mark+subject\n",
    "marks=mark/5\n",
    "\n",
    "student1.grades(marks)\n",
    "student1.printInfo()\n",
    "address1.printinformation()\n",
    "print(address1.__str__())\n",
    "print(address1)\n",
    "print(str(address1))\n",
    "print(address1.__repr__())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a73c1d35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12345  Hello\n",
      "12345  Hello\n",
      "12345  Hello\n",
      "12345  Hello\n"
     ]
    }
   ],
   "source": [
    "class MyClass:\n",
    "    x = 0\n",
    "    y = \"\"\n",
    "\n",
    "    def __init__(self, anyNumber, anyString):\n",
    "        self.x = anyNumber\n",
    "        self.y = anyString\n",
    "    def __repr__ (self):\n",
    "        return str(self.x) +\"  \"+ self.y\n",
    "myObject = MyClass(12345, \"Hello\")\n",
    "\n",
    "print(myObject.__str__())\n",
    "print(myObject)\n",
    "print(str(myObject))\n",
    "print(myObject.__repr__())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d7febaf",
   "metadata": {},
   "source": [
    "### Inheritance example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "0e931297",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jacob Sebastian is a Full-Time student\n",
      "Akash Panchani is a Part-Time student\n"
     ]
    }
   ],
   "source": [
    "class Student:\n",
    "    def __init__(self,fname,lname):\n",
    "        self.fname=fname\n",
    "        self.lname=lname\n",
    "       \n",
    "    def display(self):\n",
    "        print(f\"{self.fname} {self.lname}\",end=\" \")\n",
    "\n",
    "              \n",
    "class FullTimeStudent(Student):\n",
    "    def __init__(self,fname,lname):\n",
    "        ft1.display()\n",
    "        #Student.__init__(self,fname,lname)\n",
    "        print(\"is a Full-Time student\")\n",
    "        \n",
    "class PartTimeStudent(Student):\n",
    "     def __init__(self,fname,lname):\n",
    "        pt1.display()\n",
    "        #Student.__init__(self,fname,lname)\n",
    "        print(\"is a Part-Time student\")\n",
    "ft1=FullTimeStudent(\"Jacob\",\"Sebastian\")\n",
    "pt1=PartTimeStudent(\"Akash\",\"Panchani\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9028448a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jacob is a Part-time student\n",
      "Akash is a Full-time student\n"
     ]
    }
   ],
   "source": [
    "class Stud:\n",
    "    def __init__(self,name):\n",
    "        self.name=name\n",
    "    def pdisplay(self):\n",
    "        print(self.name,\"is a Part-time student\")\n",
    "    def fdisplay(self):\n",
    "        print(self.name,\"is a Full-time student\")\n",
    "\n",
    "class PStud(Stud):\n",
    "    pass\n",
    "class FStud(Stud):\n",
    "    pass\n",
    "\n",
    "s1=PStud(\"Jacob\")\n",
    "s1.pdisplay()\n",
    "s1=FStud(\"Akash\")\n",
    "s1.fdisplay()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c16ad431",
   "metadata": {},
   "source": [
    "### 9.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "0dafcde5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Time Pass\n",
      "Chinese\n",
      "The restaurant Time Pass serves Chinese food\n",
      "Time Pass is open\n"
     ]
    }
   ],
   "source": [
    "class Restaurant:\n",
    "    def __init__(self, restaurant_name, cuisine_type):\n",
    "        self.restaurant_name=restaurant_name\n",
    "        self.cuisine_type=cuisine_type\n",
    "        \n",
    "    def describe_restaurant(self):\n",
    "        print(f\"The restaurant {self.restaurant_name} serves {self.cuisine_type} food\")\n",
    "        \n",
    "    def open_restaurant(self):\n",
    "        print(f\"{self.restaurant_name} is open\")\n",
    "restaurant=Restaurant(\"Time Pass\", \"Chinese\")\n",
    "\n",
    "print(restaurant.restaurant_name)\n",
    "print(restaurant.cuisine_type)\n",
    "\n",
    "restaurant.describe_restaurant()\n",
    "restaurant.open_restaurant()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "700c2a97",
   "metadata": {},
   "source": [
    "### 9.2 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "4b4b0d93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The restaurant Time Pass serves Chinese food\n",
      "The restaurant Waah Taj serves Indian food\n",
      "The restaurant Blue Lagoon serves Continental food\n"
     ]
    }
   ],
   "source": [
    "class Restaurant:\n",
    "    def __init__(self, restaurant_name, cuisine_type):\n",
    "        self.restaurant_name=restaurant_name\n",
    "        self.cuisine_type=cuisine_type\n",
    "        \n",
    "    def describe_restaurant(self):\n",
    "        print(f\"The restaurant {self.restaurant_name} serves {self.cuisine_type} food\")\n",
    "        \n",
    "    def open_restaurant(self):\n",
    "        print(f\"{self.restaurant_name} is open\")\n",
    "        \n",
    "restaurant1=Restaurant(\"Time Pass\", \"Chinese\")\n",
    "restaurant2=Restaurant(\"Waah Taj\", \"Indian\")\n",
    "restaurant3=Restaurant(\"Blue Lagoon\", \"Continental\")\n",
    "\n",
    "restaurant1.describe_restaurant()\n",
    "restaurant2.describe_restaurant()\n",
    "restaurant3.describe_restaurant()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "239c8fc8",
   "metadata": {},
   "source": [
    " ### 9.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "46be1819",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Mr.Sam Geller is a 32 Male who lives in '12B Masons Street' and you can contact him on 900000000\n",
      "Hello Mr. Geller !!!...How are you????\n",
      "\n",
      " Mr.Bob Green is a 17 Male who lives in '7G Hersheys Street' and you can contact him on 900000001\n",
      "Hello Mr. Green !!!...How are you????\n",
      "\n",
      " Mr.Samantha Tribiani is a 89 Male who lives in '45T Runners Street' and you can contact him on 900000002\n",
      "Hello Mr. Tribiani !!!...How are you????\n",
      "\n",
      " Mr.Steven Bing is a 10 Male who lives in '34H Mount Street' and you can contact him on 900000003\n",
      "Hello Mr. Bing !!!...How are you????\n"
     ]
    }
   ],
   "source": [
    "class User:\n",
    "    def __init__(self,first_name, last_name, age, gender, address, contact):\n",
    "        self.first_name=first_name\n",
    "        self.last_name=last_name\n",
    "        self.age=age\n",
    "        self.gender=gender\n",
    "        self.address=address\n",
    "        self.contact=contact\n",
    "        \n",
    "    def describe_user(self):\n",
    "        print(f\" Mr.{self.first_name} {self.last_name} is a {self.age} {self.gender} who lives in '{self.address}' and you can contact him on {self.contact}\")\n",
    "        \n",
    "    def greet_user(self):\n",
    "        print(\"Hello Mr.\",self.last_name,\"!!!...How are you????\" )\n",
    "        \n",
    "user1=User(\"Sam\",\"Geller\", 32, \"Male\", \"12B Masons Street\",900000000)\n",
    "user1.describe_user()\n",
    "user1.greet_user()\n",
    "print()\n",
    "\n",
    "user1=User(\"Bob\",\"Green\", 17, \"Male\", \"7G Hersheys Street\",900000001)\n",
    "user1.describe_user()\n",
    "user1.greet_user()\n",
    "print()\n",
    "\n",
    "user1=User(\"Samantha\",\"Tribiani\", 89, \"Male\", \"45T Runners Street\",900000002)\n",
    "user1.describe_user()\n",
    "user1.greet_user()\n",
    "print()\n",
    "\n",
    "user1=User(\"Steven\",\"Bing\", 10, \"Male\", \"34H Mount Street\",900000003)\n",
    "user1.describe_user()\n",
    "user1.greet_user()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "feb968f1",
   "metadata": {},
   "source": [
    "### 9.4 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "d63f3486",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Time Pass has served 0 customers\n",
      "Time Pass has served 10 customers\n",
      "Enter value67\n",
      "Number of customers served 67\n",
      "Number of customers served after a day of bussiness 31\n"
     ]
    }
   ],
   "source": [
    "class Restaurant:\n",
    "    def __init__(self, restaurant_name, cuisine_type, number_served=0):\n",
    "        self.restaurant_name=restaurant_name\n",
    "        self.cuisine_type=cuisine_type\n",
    "        self.number_served=number_served\n",
    "        \n",
    "    def describe_restaurant(self):\n",
    "        print(f\"The restaurant {self.restaurant_name} serves {self.cuisine_type} food for {self.number_served} people\")\n",
    "        \n",
    "    def open_restaurant(self):\n",
    "        print(f\"{self.restaurant_name} is open\")\n",
    "        \n",
    "    def set_number_served(self,number_served):\n",
    "        print(\"Number of customers served\",self.number_served)\n",
    "        \n",
    "    def increment_number_served(self,number_served):\n",
    "        print(\"Number of customers served after a day of bussiness\",self.number_served+1)\n",
    "        \n",
    "restaurant=Restaurant(\"Time Pass\", \"Chinese\")\n",
    "print(restaurant.restaurant_name,\"has served\",restaurant.number_served,\"customers\")\n",
    "\n",
    "restaurant.number_served=10\n",
    "print(restaurant.restaurant_name,\"has served\",restaurant.number_served,\"customers\")\n",
    "\n",
    "restaurant.number_served=int(input(\"Enter value\"))\n",
    "restaurant.set_number_served(restaurant.number_served)\n",
    "\n",
    "restaurant.number_served=30\n",
    "restaurant.increment_number_served(restaurant.number_served)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39027240",
   "metadata": {},
   "source": [
    "### 9.5 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "e5a008c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11\n",
      "12\n",
      "13\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "class User:\n",
    "    def __init__(self,first_name, last_name, age, gender, address, contact, login_attempts):\n",
    "        self.first_name=first_name\n",
    "        self.last_name=last_name\n",
    "        self.age=age\n",
    "        self.gender=gender\n",
    "        self.address=address\n",
    "        self.contact=contact\n",
    "        self.login_attempts=login_attempts\n",
    "        \n",
    "    def describe_user(self):\n",
    "        print(f\"{self.first_name} {self.last_name} {self.age} {self.gender} {self.address} {self.contact} {self.login_attempts}\")\n",
    "        \n",
    "    def greet_user(self):\n",
    "        print(\"Hello\",self.last_name,\"How are you\" )\n",
    "        \n",
    "    def increment_login_attempts(self):\n",
    "        self.login_attempts+=1\n",
    "        print(self.login_attempts)\n",
    "        \n",
    "    def reset_login_attempts(self):\n",
    "        self.login_attempts=0   \n",
    "        \n",
    "user1=User(\"Sam\",\"Thomas\", 32, \"Male\", \"12B Masons Street\",900000000, 10)\n",
    "#user1.describe_user()\n",
    "#user1.greet_user()\n",
    "user1.increment_login_attempts()\n",
    "user1.increment_login_attempts()\n",
    "user1.increment_login_attempts()\n",
    "user1.reset_login_attempts()\n",
    "print(user1.login_attempts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "874cbb0b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
